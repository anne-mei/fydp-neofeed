{"ast":null,"code":"var _jsxFileName = \"/Users/erinroulston/capstone-app/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nconst initialValues = {\n  stomachPressure: \"\",\n  flowrate: \"\"\n}; // const [values, setValues] = useState(initialValues);\n\nclass FrontPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.flowrate = {\n      flowrateValue: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    }); // this.setState({value: event.target.flowrateValue});\n  }\n\n  handleSubmit(event) {\n    alert('A stomach pressure was submitted: ' + this.state.value);\n    alert('A flow rate was submitted: ' + this.flowrate.flowrateValue);\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Enter baby stomach pressure:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"stomach-pressure\",\n            type: \"text\",\n            value: this.state.value,\n            onChange: this.handleChange(event, 'pressure')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Enter feed flow rate:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flow-rate\",\n            type: \"text\",\n            value: this.flowrate.flowrateValue,\n            onChange: this.handleChange(event, 'flowrate')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(FrontPage, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/erinroulston/capstone-app/src/index.js"],"names":["React","useState","ReactDOM","App","reportWebVitals","render","document","getElementById","initialValues","stomachPressure","flowrate","FrontPage","Component","constructor","props","state","value","flowrateValue","handleChange","bind","handleSubmit","event","setState","target","alert","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEAF,QAAQ,CAACG,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,eAAe,EAAC,EADE;AAElBC,EAAAA,QAAQ,EAAC;AAFS,CAAtB,C,CAOA;;AAEA,MAAMC,SAAN,SAAwBX,KAAK,CAACY,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AACA,SAAKN,QAAL,GAAgB;AAACO,MAAAA,aAAa,EAAC;AAAf,KAAhB;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAO;AACjB,SAAKC,QAAL,CAAc;AAACN,MAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaP;AAArB,KAAd,EADiB,CAEjB;AACD;;AAEDI,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBG,IAAAA,KAAK,CAAC,uCAAuC,KAAKT,KAAL,CAAWC,KAAnD,CAAL;AACAQ,IAAAA,KAAK,CAAC,gCAAgC,KAAKd,QAAL,CAAcO,aAA/C,CAAL;AAEAI,IAAAA,KAAK,CAACI,cAAN;AACD;;AAEDpB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKe,YAArB;AAAA,gCACA;AAAA,kEAEE;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,IAAI,EAAC,MAAzC;AAAgD,YAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAAlE;AAAyE,YAAA,QAAQ,EAAE,KAAKE,YAAL,CAAkBG,KAAlB,EAAyB,UAAzB;AAAnF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAKA;AAAA;AAAA;AAAA;AAAA,gBALA,eAMA;AAAA;AAAA;AAAA;AAAA,gBANA,eAOA;AAAA,2DAEE;AAAO,YAAA,SAAS,EAAC,WAAjB;AAA6B,YAAA,IAAI,EAAC,MAAlC;AAAyC,YAAA,KAAK,EAAE,KAAKX,QAAL,CAAcO,aAA9D;AAA6E,YAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkBG,KAAlB,EAAyB,UAAzB;AAAvF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA,eAWA;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAXA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAzCqC,C,CA4CxC;;;AAEAnB,QAAQ,CAACG,MAAT,eACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACAH,eAAe","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconst initialValues = {\n    stomachPressure:\"\",\n    flowrate:\"\"\n};\n\n\n\n// const [values, setValues] = useState(initialValues);\n\nclass FrontPage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {value:''};\n    this.flowrate = {flowrateValue:''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event){\n    this.setState({value: event.target.value});\n    // this.setState({value: event.target.flowrateValue});\n  }\n\n  handleSubmit(event) {\n    alert('A stomach pressure was submitted: ' + this.state.value);\n    alert('A flow rate was submitted: ' + this.flowrate.flowrateValue);\n\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <br></br>\n        <form onSubmit={this.handleSubmit}>\n        <label>\n        Enter baby stomach pressure:\n          <input className=\"stomach-pressure\" type=\"text\" value={this.state.value} onChange={this.handleChange(event, 'pressure')} />\n        </label>\n        <br></br>\n        <br></br>\n        <label>\n        Enter feed flow rate:\n          <input className=\"flow-rate\" type=\"text\" value={this.flowrate.flowrateValue} onChange={this.handleChange(event, 'flowrate')} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <FrontPage />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}